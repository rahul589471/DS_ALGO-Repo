#LeetCode- 438. Find All Anagrams in a String
# https://leetcode.com/problems/find-all-anagrams-in-a-string/description/

class Solution(object):
    def findAnagrams(self, s, p):
        """
        :type s: str
        :type p: str
        :rtype: List[int]
        """

        li=[]
        dt_p={}

        if len(p)>len(s):
            return li

        for i in range(len(p)):
            if dt_p.get(p[i]) is None:
                dt_p[p[i]]=1
            else:
                dt_p[p[i]]=dt_p.get(p[i])+1

        dt_s={}

        for j in range(0, len(p)):
            if dt_s.get(s[j]) is None:
                dt_s[s[j]]=1
            else:
                dt_s[s[j]]=dt_s.get(s[j])+1

        if dt_p==dt_s:
            li.append(0)

        for i in range(len(p), len(s)):  
            dt_s[s[i - len(p)]]=dt_s.get(s[i - len(p)])-1
            if dt_s[s[i - len(p)]] ==0:
                dt_s.pop(s[i-len(p)])
            if dt_s.get(s[i]) is None:
                dt_s[s[i]]=1
            else:
                dt_s[s[i]]=dt_s.get(s[i])+1

            if dt_p==dt_s:
                li.append(i-len(p)+1)

        return li

          





            