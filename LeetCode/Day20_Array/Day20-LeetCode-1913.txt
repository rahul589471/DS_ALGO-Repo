# LeetCode-1913. Maximum Product Difference Between Two Pairs
# https://leetcode.com/problems/maximum-product-difference-between-two-pairs/description/

class Solution(object):
    def maxProductDifference(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """

        #nums.sort()
        if nums[0]>nums[1]:
            max_el=nums[0]
            max_s_el=nums[1]
        else:
            max_el=nums[1]
            max_s_el=nums[0]

        if nums[0]<nums[1]:
            min_el=nums[0]
            min_s_el=nums[1]
        else:
            min_el=nums[1]
            min_s_el=nums[0]

        for idx,it in enumerate(nums):

            if idx==0 or idx==1:
                continue
                      
            if nums[idx]>max_el: 
                max_s_el=max_el       
                max_el=nums[idx]
            else:
                if nums[idx]>max_s_el:
                    max_s_el=nums[idx]

            if nums[idx]<min_el:
                min_s_el=min_el
                min_el=nums[idx]
            else:
                if nums[idx]<min_s_el:
                    min_s_el=nums[idx]
                    


        return (max_el*max_s_el)-(min_el*min_s_el)


        #return (nums[len(nums)-1] * nums[len(nums)-2]) - (nums[0]*nums[1])
